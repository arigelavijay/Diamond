@model NetStock.Contract.Customer

@{
    ViewBag.Title = "Supplier";
    string str = "";
    if (Request["customerCode"] != "NEW")
    {
        str = string.Format("Created By: {0} <br/> Created On: {1} <br/> Modified By: {2} <br/> Modified On: {3}", Model.CreatedBy, Model.CreatedOn, Model.ModifiedBy, Model.ModifiedBy.Length > 0 ? Model.ModifiedOn.ToString("dd/MM/yy HH:mm:ss") : "");
    }
}

@using (Html.BeginForm("EditSupplier", "MasterData", FormMethod.Post, new { id = "frmSupplier" }))
{
    <div class="box box-solid box-default ">
        <div class="box-header with-border">

            @if (Request["customerCode"] == "NEW")
            {
                <h3 class="box-title">Add/Edit Supplier</h3>
            }
            else
            {
                <h3 class="box-title">Add/Edit Supplier&nbsp;&nbsp;<a class="anchPopOverCss" data-container="body" data-toggle="popover" data-placement="right" data-content="@str" data-original-title="" title=""><i class="fa fa-tv" aria-hidden="true"></i></a></h3>
            }
        </div>
        <div class="box-body">
            <fieldset class="form-horizontal">
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Supplier Code</label>
                        <div class="col-sm-2">
                            @*((Model.CustomerCode == null || Model.CustomerCode == "NEW" || Model.CustomerCode == "") ?
                            Html.TextBoxFor(m => m.CustomerCode, new { @id = "txtSupplierCode", @class = "form-control input-sm",@maxlength="50" }) :
                            Html.TextBoxFor(m => m.CustomerCode, new { @id = "txtSupplierCode", @class = "form-control input-sm", @readonly = "readonly" }))*@

                            @Html.TextBoxFor(m => m.CustomerCode, new { @id = "txtSupplierCode", @class = "form-control input-sm", @readonly = "readonly" })
                        </div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Registration No.</label>
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.RegistrationNo, new { @id = "txtRegistrationNo", @class = "form-control input-sm", @maxlength = "100" })

                        </div>

                    </div>
                </div>


                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">ชื่อ / ชื่อซัพพลายเออร์</label>
                        <div class="col-sm-8">

                            @Html.TextBoxFor(m => m.CustomerName, new { @id = "txtSupplierName", @class = "form-control input-sm", @maxlength = "255" })


                        </div>

                    </div>
                </div>

                <div class="form-group">
                    <div>

                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Supplier Type</label>
                        <div class="col-md-2">
                            @Html.DropDownListFor(m => m.CustomerMode, Model.CustomerModeList, "Select Supplier Type", new { @class = "form-control  input-sm", @maxlength = "25", @required = "required" })
                        </div>
                        <label for="ContactPerson" class="col-md-2 control-label input-sm">Contact Person</label>
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.ContactPerson, new { @class = "form-control input-sm" })
                        </div>
                    </div>
                </div>

            </fieldset>
            <fieldset class="form-horizontal">
                <legend>ที่อยู่</legend>
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">ที่อยู่ 1 /ที่อยู่ 1</label>
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.CustomerAddress.Address1, new { @class = "form-control input-sm", @maxlength = "100", @id = "Address1", @name = "Address1" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">ที่อยู่ 2 / ที่อยู่ 2</label>
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.CustomerAddress.Address2, new { @class = "form-control input-sm", @maxlength = "100" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">City / อำเภอ/เขต</label>
                        <div class="col-md-2">
                            @Html.TextBoxFor(m => m.CustomerAddress.CityName, new { @class = "form-control input-sm", @maxlength = "40" })
                        </div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">State / จังหวัด</label>
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.CustomerAddress.StateName, new { @class = "form-control input-sm", @maxlength = "40" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">ZIP Code / รหัสไปรษณีย์</label>
                        <div class="col-md-2">
                            @Html.TextBoxFor(m => m.CustomerAddress.ZipCode, new { @class = "form-control input-sm", @maxlength = "6" })
                        </div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Country / ประเทศ</label>
                        <div class="col-md-4">
                            @Html.DropDownListFor(m => m.CustomerAddress.CountryCode, Model.CountryList, "Select Country", new { @class = "form-control  input-sm", @maxlength = "2" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Phone No. / เบอร์โทรศัพท์</label>
                        <div class="col-md-2">
                            @Html.TextBoxFor(m => m.CustomerAddress.TelNo, new { @class = "form-control input-sm", @maxlength = "20" })
                        </div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Fax / เบอร์แฟ็กส์</label>
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.CustomerAddress.FaxNo, new { @class = "form-control input-sm", @maxlength = "20" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Email / อีเมลล์</label>
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.CustomerAddress.WebSite, new { @class = "form-control input-sm", @maxlength = "50" })
                            @Html.HiddenFor(m => m.CustomerAddress.AddressType)
                            @Html.HiddenFor(m => m.CustomerAddress.AddressId)

                        </div>
                    </div>
                </div>


            </fieldset>
        </div>


        <div class="box-footer">
            <div class="row  no-print">
                <div class="col-xs-12">
                    @if (HtmlHelpers.hasRight("SupplierSave"))
                    {
                        <button type="button" onclick="btnSaveClick()" id="btnSave" class="btn btn-sm btn-success">
                            <i class="fa fa-save"></i>
                            Save
                        </button> 
                    }
                    <a class="btn btn-sm btn-default" href="@Url.Action("EditSupplier", "MasterData", new { area = "MasterData", customerCode = "NEW" }, null)">
                        <i class="fa fa-close"></i>
                        Clear
                    </a>
                    @if (HtmlHelpers.hasRight("SupplierDelete"))
                    {
                        <a href="#" id="btnDelete" onclick="DeleteCustomer('@Model.CustomerCode')" class="btn btn-sm btn-danger">
                            <i class="fa fa-times-circle"></i>
                            Delete
                        </a>
                    }
                    <a href="../MasterData/Suppliers" class="btn btn-sm btn-info pull-right">
                        <i class="fa fa-arrow-circle-o-left"></i>
                        Back
                    </a>
                </div>
            </div>
        </div>

    </div>

}

@section scripts {

    <script type="text/javascript">

        $(document).ready(function () {


            $('[data-toggle="popover"]').popover({
                trigger: 'hover',
                html: true,
            });

            $("#txtSupplierCode").focus();

            var code = $("#txtSupplierCode").val();

            if (code == "NEW") {
                $("#txtSupplierCode").val('');
            }


            if ('@Model.Status' == 'False') {
            $("#txtSupplierName").addClass("StrikeOut")
            $("#btnSave").attr("disabled", " disabled")
            $("#btnDelete").attr("disabled", " disabled")
            $("#btnSupplierProduct").attr("disabled", " disabled")
        }

            if (code == "NEW") {
                $("#btnDelete").addClass('disabled')
            }
            else {
                $("#btnDelete").removeClass('disabled')
            }

        $('#frmSupplier').validate({
            rules: {

                CustomerName: {
                    required: true
                },
                Address1: {
                    required: true
                },
                CustomerMode: {
                    required: true
                }
            }
        });


    });

    function btnSaveClick() {
        if ($('#frmSupplier').valid()) {
            $('#frmSupplier').submit();
        }
    }



    function DeleteCustomer() {

        var supplierCode = $("#txtSupplierCode").val();
        var supplierName = $("#txtSupplierName").val();

        if (supplierCode == "NEW" || supplierCode == "") {
            ModalShowConfirm("Please choose a valid Supplier Code to Proceed!");
            return false;
        }


        if (!confirm("Do you want to delete Selected Supplier -  [" + supplierName + "] ?")) {
            return false;
        }
        var url = '@Url.Content("~/MasterData/DeleteSupplier?supplierCode=")' + supplierCode;
        location.href = url;

    }



    </script>
}