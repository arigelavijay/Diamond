@model NetStock.Contract.SIHeader

@{
    ViewBag.Title = "ShipmentIndent";
}
@section css{
    <link href="@Url.Content("~/Content/bootstrap-datetimepicker.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/select2.min.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/dataTables.bootstrap.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/dataTables.responsive.css")" rel="stylesheet" />
    <style>
        .anchPopOverCss, anchPopOverCss:hover {
            color: #cfc9c9 !important;
        }
    </style>
}

@using (Html.BeginForm("SaveSIDetails", "Operation", FormMethod.Post, new { id = "myForm", name = "myForm" }))
{
    <div class="box box-solid box-default">
        <div class="box-header with-border">
            <h3 class="box-title">Shipment Indent</h3>
        </div>
        <div class="box-body">
            <fieldset class="form-horizontal">
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Document No.</label>
                        <div class="col-sm-3">
                            @Html.TextBoxFor(m => m.DocumentNo, new { @class = "form-control input-sm", @readonly = "readonly", @maxlength = "50" })
                        </div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Date</label>
                        <div class="col-sm-3">
                            @Html.TextBoxFor(m => m.DocumentDate, "{0:dd/MM/yyyy}", new { @class = "form-control input-sm datepicker" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Branch</label>
                        <div class="col-md-3">
                            @Html.DropDownListFor(m => m.BranchID, Model.BranchList, null, new { @id = "ddlBranch", @class = "form-control input-sm", @maxlength = "50" })
                        </div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Supplier</label>
                        <div class="col-md-3">
                            @Html.DropDownListFor(m => m.SupplierCode, Model.SuppliersList, null, new { @id = "ddlSupplier", @class = "form-control input-sm", @maxlength = "50" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Supplier P I No.</label>
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.SupplierPI, new { @class = "form-control input-sm" })
                        </div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Customer Code</label>
                        <div class="col-md-3">
                            @*@Html.TextBoxFor(m => m.CustomerCode, new { @class = "form-control input-sm" })*@
                            @Html.DropDownListFor(m => m.CustomerCode, Model.CustomersList, null, new { @id = "ddlCustomer", @class = "form-control input-sm", @maxlength = "50" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Customer P O No.</label>
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.CustomerPO, new { @class = "form-control input-sm" })
                        </div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Payment Term</label>
                        <div class="col-md-3">
                            @Html.DropDownListFor(m => m.PaymentTerm, Model.PaymentTypeList, null, new { @id = "ddlPaymentType", @class = "form-control input-sm", @maxlength = "50" })
                        </div>

                    </div>
                </div>

                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">L/C T/T Date</label>
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.TTDate, "{0:dd/MM/yyyy}", new { @class = "form-control input-sm datepicker" })
                        </div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Is Original Docs submitted</label>
                        <div class="col-md-3">
                            @Html.CheckBoxFor(m => m.IsOriginalDoc)
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">ETA</label>
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.ETA, "{0:dd/MM/yyyy}", new { @class = "form-control input-sm datepicker" })
                        </div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Confirm ETA</label>
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.ConfirmETA, "{0:dd/MM/yyyy}", new { @class = "form-control input-sm datepicker" })
                        </div>
                        <span>
                            <a class="anchPopOverCss" data-container="body" data-toggle="popover" data-placement="right" data-content="Confirm ETA date should be less than or equal to ETA date"><i class="fa fa-info-circle" aria-hidden="true"></i></a>
                        </span>
                    </div>
                </div>

                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">ETD</label>
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.ETD, "{0:dd/MM/yyyy}", new { @class = "form-control input-sm datepicker" })
                        </div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Confirm ETD</label>
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.ConfirmETD, "{0:dd/MM/yyyy}", new { @class = "form-control input-sm datepicker" })
                        </div>
                        <span>
                            <a class="anchPopOverCss" data-container="body" data-toggle="popover" data-placement="right" data-content="Confirm ETD date should be less than or equal to ETD date"><i class="fa fa-info-circle" aria-hidden="true"></i></a>
                        </span>
                    </div>
                </div>
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">POL</label>
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.POL, new { @class = "form-control input-sm" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Remarks</label>
                        <div class="col-md-8">
                            @Html.TextAreaFor(m => m.Remark, new { @class = "form-control input-sm" })
                        </div>
                    </div>
                </div>
            </fieldset>
            <div class="nav-tabs-custom">
                <ul class="nav nav-tabs">
                    <li class="active">
                        <a href="tbDetails" data-toggle="tab">ShipmentIndent List</a>
                    </li>
                    <li class="pull-right">
                        <div class="btn-group btn-primary">
                            @if (HtmlHelpers.hasRight("ShipmentIndentSave"))
                            {
                                <button class="btn btn-sm btn-success" onclick="btnAddNewRecord()" data-toggle="modal" data-target="#shippmentIndentModal"><i class="fa fa-plus" aria-hidden="true"></i>&nbsp;Add</button>
                            }
                        </div>
                    </li>
                </ul>

                <div class="tab-content">
                    <div class="tab-pane active" id="tbDetails">
                        <div class="row">
                            <div class="col-md-12">
                                <table id="tblSIDetailsList" class="table table-striped table-hover table-bordered table-responsive setting-table">
                                    <thead style="background-color: steelblue; color: white; font-size: 12px;">
                                        <tr>
                                            <th class="hidden">Document No.</th>
                                            <th class="">Product</th>
                                            <th>Quantity</th>
                                            <th>UOM</th>
                                            <th>Currency</th>
                                            <th align="right">Unit Price</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model.SIDetails != null)
                                        {
                                            for (int itr = 0; itr < Model.SIDetails.Count; itr++)
                                            {
                                            <tr id="trSIDetails_@itr" class="SIDetailsCss">
                                                <td class="hidden" name="DocumentNo">
                                                    @Html.HiddenFor(p => p.SIDetails[itr].DocumentNo)
                                                </td>
                                                <td class="" name="ProductCode">
                                                    @Html.HiddenFor(p => p.SIDetails[itr].ProductCode)
                                                    <span id="SIDetails_@(itr)__ProductCode_span">@Model.SIDetails[itr].ProductDescription</span>

                                                </td>
                                                <td>
                                                    @Html.HiddenFor(p => p.SIDetails[itr].Quantity)
                                                    <span id="SIDetails_@(itr)__Quantity_span">@Model.SIDetails[itr].Quantity</span>

                                                </td>
                                                <td>
                                                    @Html.HiddenFor(p => p.SIDetails[itr].UOM)
                                                    <span id="SIDetails_@(itr)__UOM_span">@Model.SIDetails[itr].UOM</span>

                                                </td>
                                                <td>
                                                    @Html.HiddenFor(p => p.SIDetails[itr].CurrencyCode)
                                                    <span id="SIDetails_@(itr)__CurrencyCode_span">@Model.SIDetails[itr].CurrencyCode</span>

                                                </td>
                                                <td align="right">
                                                    @Html.HiddenFor(p => p.SIDetails[itr].UnitPrice)
                                                    <span id="SIDetails_@(itr)__UnitPrice_span">@Model.SIDetails[itr].UnitPrice</span>
                                                </td>
                                                <td>
                                                    <div class="dropdown">
                                                        <button class="btn btn-warning btn-sm dropdown-toggle" style="border-radius: 0px !important;" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                            Action
                                                                <span class="caret"></span>
                                                        </button>
                                                        <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
                                                            @if (HtmlHelpers.hasRight("ShipmentIndentView"))
                                                            {
                                                                <li><a class="cursorCss" id="Edit_@itr" onclick="EditSIDetails('@(itr)')"><i class="fa fa-pencil"></i>&nbsp;Edit</a></li>
                                                            }
                                                            @if (HtmlHelpers.hasRight("ShipmentIndentDelete"))
                                                            {
                                                                <li><a class="cursorCss" onclick="DeleteSIDetails('@(itr)')"><i class="fa fa-trash-o"></i>&nbsp;Delete</a></li>
                                                            }
                                                        </ul>
                                                    </div>
                                                </td>
                                            </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-xs-12">

                                <button type="button" onclick="btnSaveClick();" id="btnSave" class="btn btn-sm btn-success">
                                    <i class="fa fa-save"></i>
                                    Save
                                </button>

                                <a href="@Url.Action("ShipmentIndent", "Operation", new { area = "Operation", documentNo = "NEW" }, null)" class="btn btn-sm btn-default">
                                    <i class="fa fa-close"></i>
                                    Clear
                                </a>
                                @if (HtmlHelpers.hasRight("ShipmentIndentDelete"))
                                {
                                    <a href="#" id="btnDelete" onclick="DeleteStockEntry('@Model.DocumentNo')" class="btn btn-sm btn-danger">
                                        <i class="fa fa-times-circle"></i>
                                        Delete
                                    </a>
                                }
                                <a href="@Url.Action("ShipmentIndentList", "Operation", new { area = "Operation" }, null)" class="btn btn-sm btn-info pull-right">
                                    <i class="fa fa-arrow-circle-o-left"></i>
                                    Back
                                </a>
                            </div>
                        </div>
                    </div>
                </div>


            </div>
        </div>

        <!-- Footer onclick="btnSaveClick()" -->

        <input type="hidden" id="hdnFlag" name="hdnFlag" value="-1" />
    </div>
}


<div class="modal fade" id="shippmentIndentModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content modal-xs ">

            @using (Html.BeginForm("", "", FormMethod.Post, new { id = "frmshippmentIndentModal", name = "frmshippmentIndentModal", @class = "form-horizontal" }))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Product Details</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group row">
                        @{  var modalObj = new NetStock.Contract.SIDetail();  }
                        <label class="col-md-2 control-label input-sm">ProductCode</label>
                        <div class="col-md-6">
                            @Html.DropDownListFor(x => modalObj.ProductCode, Model.ProductsList, "Select Product Code", new { @class = "form-control input-sm", @required = "required", OnChange = "GetProductPrice(this)" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-md-2 control-label input-sm">Quantity</label>
                        <div class="col-md-6">
                            @Html.TextBoxFor(x => modalObj.Quantity, new { @class = "form-control input-sm decimalCss", placeholder = "Quantity" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-md-2 control-label input-sm">UOM</label>
                        <div class="col-md-6">
                            @Html.DropDownListFor(x => modalObj.UOM, Model.UOMList, "Select UOM", new { @class = "form-control input-sm", @required = "required" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-md-2 control-label input-sm">Unit Price</label>
                        <div class="col-md-6">
                            @Html.TextBoxFor(x => modalObj.UnitPrice, new { @class = "form-control input-sm decimalCss", placeholder = "Unit Price", @required = "required" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-md-2 control-label input-sm">Currency</label>
                        <div class="col-md-6">
                            @Html.DropDownListFor(x => modalObj.CurrencyCode, Model.CurrencyCodeList, "Select Currency", new { @class = "form-control input-sm", @required = "required" })
                        </div>
                    </div>
                </div>
                
                <div class="modal-footer">
                    <button type="button" class="btn btn-default btn-sm" data-dismiss="modal"><i class="fa fa-undo" aria-hidden="true"></i>&nbsp;Close</button>
                    @if (HtmlHelpers.hasRight("ShipmentIndentSave"))
                    {
                        <button type="button" class="btn btn-primary btn-sm" onclick="btnAddDetails()"><i class="fa fa-floppy-o" aria-hidden="true"></i>&nbsp;Save changes</button>
                    }
                </div>
            }
        </div>
    </div>
</div>
@section Scripts {

    @Scripts.Render("~/bundles/modalform")
    <script src="@Url.Content("~/Scripts/jquery.dataTables.js")"></script>
    <script src="@Url.Content("~/Scripts/dataTables.bootstrap.js")"></script>
    <script src="@Url.Content("~/Scripts/select2.min.js")"></script>
    <script src="@Url.Content("~/Scripts/moment.js")"></script>
    <script src="@Url.Content("~/Scripts/bootstrap-datetimepicker.js")"></script>
    <script type="text/javascript">
        var documentNo;
        var isEditLocal = false;

        $("#ddlSupplier").select2();
        $("#ddlCustomer").select2();


        $(function () {
            var dateNow = new Date();
            $("#tblSIDetailsList").DataTable(
                {
                    'bFilter': false,
                    'bPaginate': false,
                    'bInfo': false,
                    'bSortable': true,
                    'fnRowCallback': function (nRow, aData, iDisplayIndex) {
                        //nRow.className = "gradeX odd";
                        nRow.id = 'trSIDetails_' + iDisplayIndex;
                        nRow.className = 'SIDetailsCss';
                        return nRow;
                    }
                });

            $('.datepicker').datetimepicker({
                useCurrent: false,

                format: 'DD/MM/YYYY',
                inline: false
            });


            $("#ETA").on("dp.change", function (e) {
                $('#ConfirmETA').data("DateTimePicker").minDate(e.date);
            });
            $("#ConfirmETA").on("dp.change", function (e) {
                $('#ETA').data("DateTimePicker").maxDate(e.date);
            });


            $("#ETD").on("dp.change", function (e) {
                $('#ConfirmETD').data("DateTimePicker").minDate(e.date);
            });
            $("#ConfirmETD").on("dp.change", function (e) {
                $('#ETD').data("DateTimePicker").maxDate(e.date);
            });


            $('[data-toggle="popover"]').popover({
                trigger: 'hover'
            });

            $('#myForm').validate({
                rules: {
                    DocumentDate: {
                        required: true
                    },
                    BranchID: {
                        required: true
                    },
                    SupplierCode: {
                        required: true
                    },
                    SupplierPI: {
                        required: true
                    },
                    CustomerCode: {
                        required: true
                    }
                }
            });


            if ($('#DocumentNo').val() != 'NEW') {
                return;
            }

            $('#TTDate').val('');
            $('#ETA').val('');
            $('#ConfirmETA').val('');
            $('#ETD').val('');
            $('#ConfirmETD').val('');

        });

        $("#btnCreate").on("click", function () {
            //"EditPOItem", "Operation",
            //alert($("#ddlSupplier").val());
            $("#btnCreate").attr("href", "/Operation/EditPOItem?supplierCode=" + $("#ddlSupplier").val());
        })

        function OnMethodFailure(result) {
            ModalShow(result.Message, "Failure", "Save");
        }

        function OnSaveSuccess(result) {
            debugger;
            ModalShow(result.Message, "Success", "Save");
            //debugger;
            DocumentNo = result.data.DocumentNo;
        }

        function BtnOK() {
            if (ActionType == "Save") {

                var rooturl = "@Url.Action("ShipmentIndentList", "Operation", new { area = "Operation" })"


                //location.href = "/POS/SalesOrder?DocumentNo=" + DocumentNo;
                location.href = rooturl;
            }
        }


        function btnAddNewRecord() {
            $('#hdnFlag').val('-1');

            $('#modalObj_ProductCode').val();
            $('#modalObj_ProductCode').val('');
            $('#modalObj_Quantity').val('');
            $('#modalObj_UOM').val('');
            $('#modalObj_CurrencyCode').val('');
            $('#modalObj_UnitPrice').val('');
        }

        function ProductDetailModalValidation() {
            $('#frmshippmentIndentModal').validate({
                rules: {
                    'modalObj.ProductCode': {
                        required: true
                    },
                    'modalObj.UOM': {
                        required: true
                    },
                    'modalObj.Quantity': {
                        required: true
                    },
                    'modalObj.UnitPrice': {
                        required: true
                    },
                    'modalObj.CurrencyCode': {
                        required: true
                    }
                },
                messages: {
                    'modalObj.ProductCode': {
                        required: 'Product Code is required.'
                    },
                    'modalObj.UOM': {
                        required: 'UOM is required.'
                    },
                    'modalObj.Quantity': {
                        required: 'Quantity is required.'
                    },
                    'modalObj.UnitPrice': {
                        required: 'Unit Price is required.'
                    },
                    'modalObj.CurrencyCode': {
                        required: 'Currency Code is required.'
                    }
                }
            });
        }

        function btnAddDetails() {
            //var validator = $('#frmshippmentIndentModal').data('bootstrapValidator');
            //validator.validate();
            //if (validator.isValid()) {
            ProductDetailModalValidation();
            if (!$('#frmshippmentIndentModal').valid()) {
                return;
            }

            var hdnFlag = $('#hdnFlag').val();
            if (hdnFlag == '-1') {
                var _index = $('.SIDetailsCss').length;
                var obj = {
                    index: _index,
                    ProductCode: $('#modalObj_ProductCode').val(),
                    ProductDesc: $('#modalObj_ProductCode option:selected').text(),
                    Quantity: $('#modalObj_Quantity').val(),
                    UOM: $('#modalObj_UOM').val(),
                    CurrencyCode: $('#modalObj_CurrencyCode').val(),
                    UnitPrice: $('#modalObj_UnitPrice').val()
                };
                var rowData = [
                     '<input id="SIDetails_' + obj.index + '__DocumentNo" name="SIDetails[' + obj.index + '].DocumentNo" type="hidden" value="' + obj.DocumentNo + '">',
                            '<input id="SIDetails_' + obj.index + '__ProductCode" name="SIDetails[' + obj.index + '].ProductCode" type="hidden" value="' + obj.ProductCode + '">' +
                            '<span id="SIDetails_' + obj.index + '__ProductCode_span">' + obj.ProductDesc + '</span>',
                            '<span id="SIDetails_' + obj.index + '__Quantity_span">' + obj.Quantity + '</span>' +
                            '<input id="SIDetails_' + obj.index + '__Quantity" name="SIDetails[' + obj.index + '].Quantity" type="hidden" value="' + obj.Quantity + '">',
                            '<span id="SIDetails_' + obj.index + '__UOM_span">' + obj.UOM + '</span>' +
                            '<input id="SIDetails_' + obj.index + '__UOM" name="SIDetails[' + obj.index + '].UOM" type="hidden" value="' + obj.UOM + '">',
                            '<span id="SIDetails_' + obj.index + '__CurrencyCode_span">' + obj.CurrencyCode + '</span>' +
                            '<input id="SIDetails_' + obj.index + '__CurrencyCode" name="SIDetails[' + obj.index + '].CurrencyCode" type="hidden" value="' + obj.CurrencyCode + '">',
                             '<span id="SIDetails_' + obj.index + '__UnitPrice_span">' + obj.UnitPrice + '</span>' +
                            '<input id="SIDetails_' + obj.index + '__UnitPrice" name="SIDetails[' + obj.index + '].UnitPrice" type="hidden" value="' + obj.UnitPrice + '">',
                            '<div class="dropdown">' +
                            '<button class="btn btn-warning btn-sm dropdown-toggle" style="border-radius: 0px !important;" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">Action<span class="caret"></span></button>' +
                            '<ul class="dropdown-menu" aria-labelledby="dropdownMenu1">' +
                                '<li><a class="cursorCss" id="Edit_' + obj.index + '" onclick="EditSIDetails(' + obj.index + ')"><i class="fa fa-pencil"></i>&nbsp;Edit</a></li>' +
                                '<li><a class="cursorCss" onclick="DeleteSIDetails(' + obj.index + ')"><i class="fa fa-trash-o"></i>&nbsp;Delete</a></li>' +
                            '</ul></div>'
                ];
                $('#tblSIDetailsList').dataTable().fnAddData(rowData);
                $('tr td:nth-child(1)').hide();
                $('#shippmentIndentModal').modal('hide');
                ResetModal();
            }
            else {
                $('#SIDetails_' + hdnFlag + '__ProductCode').val($('#modalObj_ProductCode').val());
                $('#SIDetails_' + hdnFlag + '__ProductCode_span').text($('#modalObj_ProductCode option:selected').text());

                $('#SIDetails_' + hdnFlag + '__Quantity').val($('#modalObj_Quantity').val());
                $('#SIDetails_' + hdnFlag + '__Quantity_span').text($('#modalObj_Quantity').val());

                $('#SIDetails_' + hdnFlag + '__UOM').val($('#modalObj_UOM').val());
                $('#SIDetails_' + hdnFlag + '__UOM_span').text($('#modalObj_UOM').val());

                $('#SIDetails_' + hdnFlag + '__CurrencyCode').val($('#modalObj_CurrencyCode').val());
                $('#SIDetails_' + hdnFlag + '__CurrencyCode_span').text($('#modalObj_CurrencyCode').val());

                $('#SIDetails_' + hdnFlag + '__UnitPrice').val($('#modalObj_UnitPrice').val());
                $('#SIDetails_' + hdnFlag + '__UnitPrice_span').text($('#modalObj_UnitPrice').val());


                $('#hdnFlag').val('-1');
                $('#shippmentIndentModal').modal('hide');
            }
        }
        //}


        function EditSIDetails(index) {
            debugger;
            $('#modalObj_ProductCode').val($('#SIDetails_' + index + '__ProductCode').val());
            $('#modalObj_Quantity').val($('#SIDetails_' + index + '__Quantity').val());
            $('#modalObj_UOM').val($('#SIDetails_' + index + '__UOM').val());
            $('#modalObj_CurrencyCode').val($('#SIDetails_' + index + '__CurrencyCode').val());
            $('#modalObj_UnitPrice').val($('#SIDetails_' + index + '__UnitPrice').val());

            $('#shippmentIndentModal').modal('show');
            $('#hdnFlag').val(index);
        }


        function DeleteSIDetails(index) {
            debugger;
            //$('#SIDetails_' + index + '__Status').val(false);
            $('#trSIDetails_' + index).css({
                'color': 'red',
                'text-decoration': 'line-through',
                'font-style': 'italic'
            });
        }


        function ResetModal() {
            $('#modalObj_ProductCode').val('');
            $('#modalObj_Quantity').val('');
            $('#modalObj_UOM').val('');
            $('#modalObj_CurrencyCode').val('');
            $('#modalObj_UnitPrice').val('');
        }

        function GetProductPrice(el) {
            var productCode = $(el).val();
            var supplierCode = $('#ddlSupplier').val();

            $.ajax({
                url: '@Url.Content("~/Operation/GetProductCostPrice")' + '?productCode=' + productCode + '&supplierCode=' + supplierCode,
                method: 'GET',
                contentType: 'application/json',
                acceptType: 'json',
                success: function (result) {
                    $('#modalObj_UnitPrice').val(result.UnitPrice);
                }
            });
        }

        function btnSaveClick() {
            var rowsCount = $('.SIDetailsCss').length;
            if ($('#myForm').valid() && rowsCount > 0) {
                $('#myForm').submit();
            }
            else {
                if ($('#myForm').valid())
                    alert('Please add atleast one shipment indent to save');
            }
        }

        function DeleteStockEntry(documentNo) {
            var r = confirm('Are you sure you want to delete [' + documentNo + ']?');
            if (r)
                location.href = '@Url.Content("~/Operation/DeleteSI?documentNo=")' + documentNo;
        }


    </script>


}


