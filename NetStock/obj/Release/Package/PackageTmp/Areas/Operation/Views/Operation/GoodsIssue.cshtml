@model NetStock.Contract.GoodsIssue
@{
    ViewBag.Title = "GoodsIssue";
    Layout = "~/Views/Shared/_Layout.cshtml";

    if (Model.DocumentNo == "NEW")
    {
        Model.DocumentDate = DateTime.Now;
    }
}
@section css{
    <link href="@Url.Content("~/Content/bootstrap-datetimepicker.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/select2.min.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/dataTables.bootstrap.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/dataTables.responsive.css")" rel="stylesheet" />
}
<div class="box box-solid box-default">
    <div class="box-header with-border">
        <h3 class="box-title">Add/Edit Goods Issue</h3>
    </div>
    <div class="box-body">
        @using (Html.BeginForm("SaveGoodsIssue", "Operation", FormMethod.Post, new { id = "frmGoodsIssue", name = "frmGoodsIssue" }))
        {
            <fieldset class="form-horizontal">
                <div class="form-group">
                    <label class="col-md-1 control-label input-sm">Document No</label>
                    <div class="col-md-3">
                        @Html.TextBoxFor(x => x.DocumentNo, new { @class = "form-control input-sm", @readonly = "readonly" })
                    </div>
                    <label class="col-md-1 control-label input-sm">Document Date</label>
                    <div class="col-md-3">
                        @Html.TextBoxFor(x => x.DocumentDate, new { @class = "form-control input-sm" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-1 control-label input-sm">Supplier Code</label>
                    <div class="col-md-3">
                        @Html.DropDownListFor(x => x.SupplierCode, Model.SupplierList, "Select Supplier", new { @class = "form-control input-sm" })
                    </div>
                    <label class="col-md-1 control-label input-sm">Customer Code</label>
                    <div class="col-md-3">
                        @Html.DropDownListFor(x => x.CustomerCode, Model.CustomerList, "Select Customer", new { @class = "form-control input-sm" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-1 control-label input-sm">Reference No</label>
                    <div class="col-md-3">
                        @Html.TextBoxFor(x => x.ReferenceNo, new { @class = "form-control input-sm" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-1 control-label input-sm">Remarks</label>
                    <div class="col-md-7">
                        @Html.TextAreaFor(x => x.Remarks, new { @class = "form-control input-sm" })
                    </div>
                </div>
            </fieldset>
            <div class="row">
                <div class="col-md-12">
                    @if (HtmlHelpers.hasRight("GoodsIssueSave"))
                    {
                        <button onclick="btnAddItem();" type="button" class="btn btn-sm btn-primary pull-right"><i class="fa fa-plus" aria-hidden="true"></i>&nbsp;Add</button>
                    }
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <table class="table table-condensed table-striped table-hover table-bordered" id="goodsIssueTbl">
                        <thead style="background-color: steelblue; color: white; font-size: 12px;">
                            <tr>
                                <th>Product Code</th>
                                <th>Product Description</th>
                                <th>Current Qty</th>
                                <th>Quantity</th>
                                <th>Lot No</th>
                                <th>#Action</th>
                            </tr>
                        </thead>
                        <tbody id="goodsIssueTblBody">
                            @if (Model.GoodsIssueDetails != null)
                            {
                                for (var i = 0; i < Model.GoodsIssueDetails.Count; i++)
                                {
                                <tr class="goodsIssueTblCss" id="goodsIssueTr_@(i)">
                                    <td>
                                        <span id="GoodsIssueDetails_@(i)__ProductCode_span">@Model.GoodsIssueDetails[i].ProductCode</span>
                                        @Html.HiddenFor(x => x.GoodsIssueDetails[i].DocumentNo)
                                    </td>
                                    <td>
                                        <span id="GoodsIssueDetails_@(i)__ProductName_span">@Model.GoodsIssueDetails[i].ProductName</span>
                                        @Html.HiddenFor(x => x.GoodsIssueDetails[i].ProductCode)
                                    </td>
                                    <td>
                                        <span id="GoodsIssueDetails_@(i)__CurrentQty_span">@Model.GoodsIssueDetails[i].CurrentQty</span>
                                        @Html.HiddenFor(x => x.GoodsIssueDetails[i].CurrentQty)
                                    </td>
                                    <td>
                                        <span id="GoodsIssueDetails_@(i)__Qty_span">@Model.GoodsIssueDetails[i].Qty</span>
                                        @Html.HiddenFor(x => x.GoodsIssueDetails[i].Qty)
                                    </td>
                                    <td>
                                        <span id="GoodsIssueDetails_@(i)__LotNo_span">@Model.GoodsIssueDetails[i].LotNo</span>
                                        @Html.HiddenFor(x => x.GoodsIssueDetails[i].LotNo)
                                        @Html.HiddenFor(x => x.GoodsIssueDetails[i].Status)
                                    </td>
                                    <td>

                                        <div class="dropdown">
                                            <button class="btn btn-warning btn-sm dropdown-toggle" style="border-radius: 0px !important;" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                Action
                                                    <span class="caret"></span>
                                            </button>
                                            <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
                                                @if (HtmlHelpers.hasRight("GoodsIssueView"))
                                                {
                                                    <li><a style="cursor:pointer;" onclick="EditGoodsIssue('@i')"><i class="fa fa-pencil-square-o" aria-hidden="true"></i>&nbsp;Edit</a></li>
                                                }
                                                @if (HtmlHelpers.hasRight("GoodsIssueDelete"))
                                                {
                                                    <li><a style="cursor:pointer;" onclick="DeleteGoodsIssue('@i')"><i class="fa fa-trash" aria-hidden="true"></i>&nbsp;Delete</a></li>
                                                }
                                            </ul>
                                        </div>
                                    </td>
                                </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="row">
                <div class="col-md-2">
                    <button type="button" onclick="btnSave();" class="btn btn-primary btn-sm"><i class="fa fa-floppy-o" aria-hidden="true"></i>&nbsp;Save</button>
                    <button type="button" onclick="btnClear();" class="btn btn-info btn-sm"><i class="fa fa-refresh" aria-hidden="true"></i>&nbsp;Clear</button>
                </div>
                <div class="col-md-9">&nbsp;</div>
                <div class="col-md-1">
                    <button type="button" onclick="location.href = '@Url.Content("~/Operation/GoodsIssueList")'" class="btn btn-default btn-sm"><i class="fa fa-undo" aria-hidden="true"></i>&nbsp;Back</button>
                </div>
            </div>
        }
    </div>
</div>
<div class="modal fade" role="dialog" id="goodsIssueDetailsModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Goods Issue Details</h4>
            </div>
            <div class="modal-body">
                <form id="frmModal" name="frmModal">
                    <div class="row">
                        <div class="form-group-sm">
                            <div class="col-md-3">
                                <label class="control-label input-sm pull-right">Product Name</label>
                            </div>
                            <div class="col-md-5">
                                @Html.DropDownList("Products", new SelectList(Utility.GetProductList(), "Value", "Text", ""), "Select Product", new { @class = "form-control input-sm", onchange = "Products_OnChange(this);" })
                            </div>
                        </div>
                    </div>
                    <div class="row" style="margin-top: 10px;">
                        <div class="form-group-sm">
                            <div class="col-md-3">
                                <label class="control-label input-sm pull-right">Quantity</label>
                            </div>
                            <div class="col-md-5">
                                @Html.TextBox("Quantity", "", new { @class = "form-control input-sm decimalCss" })
                            </div>
                        </div>
                    </div>
                    <div class="row" style="margin-top: 10px;">
                        <div class="form-group-sm">
                            <div class="col-md-3">
                                <label class="control-label input-sm pull-right">Lot No</label>
                            </div>
                            <div class="col-md-5">
                                @Html.TextBox("LotNo", "", new { @class = "form-control input-sm" })
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-sm" data-dismiss="modal"><i class="fa fa-undo" aria-hidden="true"></i>&nbsp;Close</button>
                @if (HtmlHelpers.hasRight("GoodsIssueSave"))
                {
                    <button type="button" class="btn btn-primary btn-sm" onclick="btnSaveChanges();"><i class="fa fa-floppy-o" aria-hidden="true"></i>&nbsp;Save changes</button>
                }
            </div>
        </div>
    </div>
</div>
@section Scripts {

    @Scripts.Render("~/bundles/modalform")
    <script src="@Url.Content("~/Scripts/jquery.dataTables.js")"></script>
    <script src="@Url.Content("~/Scripts/dataTables.bootstrap.js")"></script>
    <script src="@Url.Content("~/Scripts/select2.min.js")"></script>
    <script src="@Url.Content("~/Scripts/moment.js")"></script>
    <script src="@Url.Content("~/Scripts/bootstrap-datetimepicker.js")"></script>
    <script type="text/javascript">
        var tbl;
        $(function () {
            $('#DocumentDate').datetimepicker({
                //useCurrent: false,
                //maxDate: moment('DateTime.Now.ToString("dd/MM/yyyy")'),
                format: 'DD/MM/YYYY HH:mm',
                //inline: false
            });

            $('#SupplierCode, #CustomerCode').select2();

            tbl = $('#goodsIssueTbl').DataTable({
                responsive: true,
                'bFilter': false,
                'bPaginate': false,
                'bInfo': false,
                'bSort': false,
                'fnRowCallback': function (nRow, aData, iDisplayIndex) {
                    nRow.className = 'goodsIssueTblCss';
                    nRow.id = 'goodsIssueTr_' + iDisplayIndex;
                    return nRow;
                }

            });

            $('#frmGoodsIssue').validate({
                rules: {
                    DocumentDate: {
                        required: true
                    },
                    SupplierCode: {
                        required: true
                    },
                    CustomerCode: {
                        required: true
                    },
                    ReferenceNo: {
                        required: true
                    }
                },
                messages: {
                    DocumentDate: {
                        required: 'Document Date is required'
                    },
                    SupplierCode: {
                        required: 'Supplier Code is required'
                    },
                    CustomerCode: {
                        required: 'Customer Code is required'
                    },
                    ReferenceNo: {
                        required: 'Reference No is required'
                    },
                    Remarks: {
                        required: 'Remarks is required'
                    }
                }
            });

            $('#docDt').on('dp.change', function (e) {
                $('#DocumentDate').val($('#docDt').val());
            });
        });

        var flag = -1;
        function btnAddItem() {
            $('#Products, #Quantity, #LotNo').val('');
            $('#goodsIssueDetailsModal').modal('show');

            flag = -1;
        }

        function btnSaveChanges() {
            modalValidation();

            if (!$('#frmModal').valid())
                return;

            var obj = {
                ProductCode: $('#Products').val(),
                ProductName: $('#Products option:selected').text(),
                Quantity: $('#Quantity').val(),
                LotNo: $('#LotNo').val()
            };

            var index = $('.goodsIssueTblCss').length;
            var tempQty = 0;
            for (var i = 0; i < index; i++) {
                if (obj.ProductCode == $('#GoodsIssueDetails_' + i + '__ProductCode').val()) {
                    tempQty = tempQty + parseInt($('#GoodsIssueDetails_' + i + '__Qty').val());
                }
            }

            if (flag == -1) {

                var rowData = [
                    '<span id="GoodsIssueDetails_' + index + '__ProductCode_span">' + obj.ProductCode + '</span>' +
                    '<input id="GoodsIssueDetails_' + index + '__DocumentNo" name="GoodsIssueDetails[' + index + '].DocumentNo" type="hidden" value="' + $('#DocumentNo').val() + '">',

                    '<span id="GoodsIssueDetails_' + index + '__ProductName_span">' + obj.ProductName + '</span>' +
                    '<input id="GoodsIssueDetails_' + index + '__ProductCode" name="GoodsIssueDetails[' + index + '].ProductCode" type="hidden" value="' + obj.ProductCode + '">',

                    '<span id="GoodsIssueDetails_' + index + '__CurrentQty_span">' + parseFloat(currentQty - parseInt(obj.Quantity) - tempQty) + '</span>' +
                    '<input id="GoodsIssueDetails_' + index + '__CurrentQty" name="GoodsIssueDetails[' + index + '].CurrentQty" type="hidden" value="' + parseFloat(currentQty - parseInt(obj.Quantity) - tempQty) + '">',

                    '<span id="GoodsIssueDetails_' + index + '__Qty_span">' + obj.Quantity + '</span>' +
                    '<input id="GoodsIssueDetails_' + index + '__Qty" name="GoodsIssueDetails[' + index + '].Qty" type="hidden" value="' + obj.Quantity + '">',

                    '<span id="GoodsIssueDetails_' + index + '__LotNo_span">' + obj.LotNo + '</span>' +
                    '<input id="GoodsIssueDetails_' + index + '__LotNo" name="GoodsIssueDetails[' + index + '].LotNo" type="hidden" value="' + obj.LotNo + '">' +
                    '<input id="GoodsIssueDetails_' + index + '__Status" name="GoodsIssueDetails[' + index + '].Status" type="hidden" value="' + '@Boolean.TrueString' + '">',

                '<div class="dropdown"><button class="btn btn-warning btn-sm dropdown-toggle" style="border-radius: 0px !important;" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">Action<span class="caret"></span></button>' +
                '<ul class="dropdown-menu" aria-labelledby="dropdownMenu1">' +
                    '<li><a style="cursor:pointer;" onclick="EditGoodsIssue(' + index + ')"><i class="fa fa-pencil-square-o" aria-hidden="true"></i>&nbsp;Edit</a></li>' +
                    '<li><a style="cursor:pointer;" onclick="DeleteGoodsIssue(' + index + ')"><i class="fa fa-trash" aria-hidden="true"></i>&nbsp;Delete</a></li>' +
                '</ul></div>'
                ];

                $('#goodsIssueTbl').dataTable().fnAddData(rowData);
                $('#goodsIssueDetailsModal').modal('hide');
            }
            else {

                tempQty = tempQty - parseInt($('#GoodsIssueDetails_' + flag + '__Qty').val());
                $('#GoodsIssueDetails_' + flag + '__ProductCode').val($('#Products').val());
                $('#GoodsIssueDetails_' + flag + '__ProductName_span').text($('#Products option:selected').text());
                $('#GoodsIssueDetails_' + flag + '__ProductCode_span').text($('#Products').val());

                $('#GoodsIssueDetails_' + flag + '__CurrentQty').val(parseFloat(currentQty - parseInt($('#Quantity').val()) - tempQty));
                $('#GoodsIssueDetails_' + flag + '__CurrentQty_span').text(parseFloat(currentQty - parseInt($('#Quantity').val()) - tempQty));

                $('#GoodsIssueDetails_' + flag + '__Qty').val($('#Quantity').val());
                $('#GoodsIssueDetails_' + flag + '__Qty_span').text($('#Quantity').val());

                $('#GoodsIssueDetails_' + flag + '__LotNo').val($('#LotNo').val());
                $('#GoodsIssueDetails_' + flag + '__LotNo_span').text($('#LotNo').val());

                $('#goodsIssueDetailsModal').modal('hide');

                flag = -1;
            }
        }

        function EditGoodsIssue(index) {
            flag = index;

            $('#Products').val($('#GoodsIssueDetails_' + index + '__ProductCode').val());
            $('#Quantity').val($('#GoodsIssueDetails_' + index + '__Qty').val());
            $('#LotNo').val($('#GoodsIssueDetails_' + index + '__LotNo').val());

            $('#goodsIssueDetailsModal').modal('show');
            GetCurrentStock($('#GoodsIssueDetails_' + index + '__ProductCode').val());
        }

        function DeleteGoodsIssue(index) {
            $('#GoodsIssueDetails_' + index + '__Status').val('@Boolean.FalseString');
        $('#goodsIssueTr_' + index).css({
            'color': 'red',
            'text-decoration': 'line-through',
            'font-style': 'italic'
        });
    }

    function btnClear() {
        $('#SupplierCode').select2('val', '');
        $('#CustomerCode').select2('val', '');
        $('#DocumentDate, #ReferenceNo, #Remarks').val('');
        tbl.clear().draw();
    }

    function modalValidation() {
        $('#frmModal').validate({
            rules: {
                Products: {
                    required: true
                },
                Quantity: {
                    required: true
                },
                LotNo: {
                    required: false
                }
            },
            messages: {
                Products: {
                    required: 'Product is required'
                },
                Quantity: {
                    required: 'Enter quantity'
                },
                LotNo: {
                    required: 'Lot no is required'
                }
            }
        });
    }

    function btnSave() {
        $('.select2-hidden-accessible').next().next().css('border', '');
        if (!$('#frmGoodsIssue').valid()) {
            if ($('.select2-hidden-accessible').hasClass('error')) {
                $('.select2-hidden-accessible.error').next().next().css('border', 'solid 1px red');
            }
            return;
        }
        else if ($('.goodsIssueTblCss').length === 0)
            alert('Please add atleast one product to proceed.');
        else
            $('#frmGoodsIssue').submit();
    }

    var currentQty = 0;
    function Products_OnChange(el) {
        GetCurrentStock(el.value)
    }

    function GetCurrentStock(productCode) {
        $.ajax({
            url: '@Url.Content("~/Operation/GetCurrentStock/")' + productCode,
            method: 'GET',
            contentType: 'application/json',
            dataType: 'JSON',
            success: function (res) {
                //debugger;
                //alert(res.currentStock);
                currentQty = res.currentStock;
            }
        });
    }

    </script>
}



